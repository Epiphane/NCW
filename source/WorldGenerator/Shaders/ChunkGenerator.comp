#version 430

layout(local_size_x = 8, local_size_y = 16, local_size_z = 8) in;
layout(std140, binding = 0) buffer destBuffer
{
   vec4 Colors[];
} outBuffer;

int kChunkWidth = 16;
int kChunkHeight = 64;

void main()
{
	// Read current global position
	ivec3 coords = ivec3(gl_GlobalInvocationID.xyz);

	uint gWidth = kChunkWidth;// gl_WorkGroupSize.x * gl_NumWorkGroups.x;
	uint gHeight = kChunkHeight;//gl_WorkGroupSize.y * gl_NumWorkGroups.y;
	uint gDepth = kChunkWidth;//gl_WorkGroupSize.z * gl_NumWorkGroups.z;
	uint gSize = gWidth * gHeight * gDepth;

	uint offset = (coords.y * gWidth + coords.z) * gWidth + coords.x;

	float px = float(coords.x) / gWidth;
	float py = float(coords.y) / gHeight;
	float pz = float(coords.z) / gWidth;

	outBuffer.Colors[offset] = vec4(px, py, pz, 1);
}
