cmake_minimum_required(VERSION 3.1)
project(Engine)

file(GLOB_RECURSE OSX_SOURCES "*/OSX/*")
file(GLOB_RECURSE WIN_SOURCES "*/Windows/*")

file(GLOB_RECURSE SOURCES
   "*.h"
   "*.cpp"
   "*.mm"
)

if (APPLE)
list(REMOVE_ITEM SOURCES ${WIN_SOURCES})
elseif(WIN32)
list(REMOVE_ITEM SOURCES ${OSX_SOURCES})
endif()

add_library(${PROJECT_NAME} STATIC ${SOURCES} )
target_link_libraries(${PROJECT_NAME} ${CW_LIBS})

<<<<<<< HEAD
# Nice-looking separation for VS2017
foreach(source IN LISTS SOURCES)
   file(RELATIVE_PATH source_relative "${CMAKE_CURRENT_SOURCE_DIR}" "${source}")
   get_filename_component(source_path "${source_relative}" PATH)
   string(REPLACE "/" "\\" source_path_msvc "${source_path}")
   source_group("${source_path_msvc}" FILES "${source}")
endforeach()
=======
# install libraries into /lib
INSTALL(TARGETS Engine DESTINATION "${CMAKE_INSTALL_PREFIX}/lib")
SOURCE_GROUP(Logger REGULAR_EXPRESSION ".*/Engine/Logger/.*$")
SOURCE_GROUP(Graphics REGULAR_EXPRESSION ".*/Engine/Graphics/.*$")
SOURCE_GROUP(Core REGULAR_EXPRESSION ".*/Engine/Core/.*$")
SOURCE_GROUP(GameObject REGULAR_EXPRESSION ".*/Engine/GameObject/.*$")
SOURCE_GROUP(Entity REGULAR_EXPRESSION ".*/Engine/Entity/.*$")
SOURCE_GROUP(Event REGULAR_EXPRESSION ".*/Engine/Event/.*$")
SOURCE_GROUP(System REGULAR_EXPRESSION ".*/Engine/System/.*$")
SOURCE_GROUP(UI REGULAR_EXPRESSION ".*/Engine/UI/.*$")
>>>>>>> 263f55c... Sweet sweet new UI
