// Library generation helper
// Required defines:
//    .LibraryName
//    .LibraryPath
//    .AdditionalCompilerOptions
//------------------------------------------------------------------------------
ForEach( .Config in .Configs )
{
   Using( .Config )
   .OutputPath + '$Platform$-$Config$/$LibraryName$'
   .CompilerOutputPath   = .OutputPath

   // Unity
   // --------------------------------------------------------------------------
   Unity( '$LibraryName$-Unity-$Platform$-$Config$' )
   {
      .UnityInputPath         = '$LibraryPath$/'
      .UnityOutputPath        = .OutputPath
   }

   // Unity (Objective-C)
   Unity( '$LibraryName$-UnityObjC-$Platform$-$Config$' )
   {
      .UnityInputPath         = '$LibraryPath$/'
      .UnityInputPattern      = '*.mm'
      .UnityOutputPath        = .OutputPath
      .UnityOutputPattern     = 'UnityObjC*.mm'
   }

   // Library
   //--------------------------------------------------------------------------
   Library( '$LibraryName$-Lib-$Platform$-$Config$' )
   {
      // Input
      .CompilerInputUnity        = {
                                    '$LibraryName$-Unity-$Platform$-$Config$'
                                    '$LibraryName$-UnityObjC-$Platform$-$Config$'
                                 }
      .CompilerOptions           + .AdditionalCompilerOptions

      // Output
      .CompilerOutputPath         = .OutputPath
      .LibrarianOutput            = '$OutputPath$/$LibraryName$$LibExtension$'
   }

   Alias( '$LibraryName$-$Platform$-$Config$' ) { .Targets = '$LibraryName$-Lib-$Platform$-$Config$' }
   ^'Targets_$Platform$_$Config$' + { '$LibraryName$-$Platform$-$Config$' }
}

VCXProject( '$LibraryName$-proj' )
{
   .ProjectOutput = '$OutputPath$/VisualStudio/Projects/Library/$LibraryName$.vcxproj'
   .ProjectInputPaths = '$LibraryPath$\'
   .ProjectBasePath = '$LibraryPath$\'
   .Target = '$LibraryName$-Lib'

   .ProjectDebug        = [ Using( .ProjectDebug )   .Target = '$LibraryName$-$Platform$-$Config$' ]
   .ProjectRelease      = [ Using( .ProjectRelease ) .Target = '$LibraryName$-$Platform$-$Config$' ]
}
^VSCoreLibraries + { '$LibraryName$-proj' }


XCodeProject( '$LibraryName$-xcode' )
{
   .ProjectOutput          = '$OutputPath$/XCode/Projects/Library/$LibraryName$.xcodeproj/project.pbxproj'
   .ProjectBasePath        = '$LibraryPath$'
   .ProjectInputPaths      = '$LibraryPath$'
   .XCodeBuildWorkingDir   = '../../../..'

   .ProjectDebug        = [ Using( .ProjectDebug )   .Target = '$LibraryName$-$Platform$-$Config$' ]
   .ProjectRelease      = [ Using( .ProjectRelease ) .Target = '$LibraryName$-$Platform$-$Config$' ]
}
^XCodeCoreLibraries + { '$LibraryName$-xcode' }
