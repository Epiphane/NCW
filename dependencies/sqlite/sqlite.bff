// sqlite external library
//------------------------------------------------------------------------------
.SqliteIncludePaths = ''
{
   .LibraryName = 'sqlite'
   .LibraryVersion = '3.22.0'
   .LibraryIncludePaths = '$_CURRENT_BFF_DIR_$/$LibraryVersion$'
   ^IncludeSearchPath + '$_WORKING_DIR_$/$LibraryIncludePaths$;'

                           #if __WINDOWS__
   .AdditionalCompilerOptions = ' /wd4005' // '%s': macro redefinition
                              + ' /wd4242' // conversion from '%s' to '%s', possible loss of data
                              + ' /wd4996' // '%s': The POSIX name for this item is deprecated.
                              + ' /wd6001' // Using uninitialized memory
                              + ' /wd6011' // Dereferencing NULL pointer '%s'
                              + ' /wd6031' // Return value ignored
                              + ' /wd6239' // 
                              + ' /wd6240' // 
                              + ' /wd6308' // 
                              + ' /wd6313' // Incorrect operator:  zero-valued flag cannot be tested with bitwise-and.
                              + ' /wd6326' // Potential comparison of a constant with another constant.
                              + ' /wd6330' // '%s' passed as _Param_ when '%s' is required
                              + ' /wd6385'
                              + ' /wd6386'
                              + ' /wd6387'
                              + ' /wd28182'
                              + ' /wd28251'
                           #endif
                           #if __OSX__
   .AdditionalCompilerOptions = ' -Wno-reserved-user-defined-literal'
                              + ' -Wno-writable-strings'
                              - ' -std=c++17'
                           #endif

   .LibrarySourcePath   = '$_CURRENT_BFF_DIR_$/$LibraryVersion$'
   .LibrarySourceFiles  =  { 'sqlite3.c', 'shell.c' }

   #define NO_UNITY_BUILD_ONCE
   #define C_BUILD_ONCE
   .UnityOutputPattern  = 'Unity*.c'
   #include "../dependency.bff"

   ^SqliteIncludePaths = ' -I$LibraryIncludePaths$'
}