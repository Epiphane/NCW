<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:local="clr-namespace:Inventory"
        xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
        mc:Ignorable="d">

    <!--Brushes-->
    <SolidColorBrush x:Key="Brush.TitleBarText" Color="#FFEAC067"/>
    <SolidColorBrush x:Key="Brush.StatsIcon" Color="#E5CC934B"/>
    <SolidColorBrush x:Key="Brush.StatsLabelText" Color="#E5FFFFFF"/>
    <SolidColorBrush x:Key="Brush.StatsValueText" Color="#7FFFFFFF"/>
    <SolidColorBrush x:Key="Brush.SlotBorder" Color="#FFEBA147"/>
    <SolidColorBrush x:Key="Brush.EquipSlotText" Color="#CCC6C4B9"/>
    <LinearGradientBrush x:Key="Brush.StatsValueBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="#7F000000" Offset="0.9"/>
        <GradientStop Color="#33000000" Offset="1"/>
    </LinearGradientBrush>
    <ImageSource x:Key="Image.IconAtlas">Images/InventoryAtlas.png</ImageSource>

    <!--Title Bar-->
    <Style x:Key="Style.TitleBarText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Fonts/#Sequel"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.TitleBarText}"/>
        <Setter Property="Margin" Value="0,2"/>
    </Style>

    <!--Stats-->
    <Style x:Key="Style.StatsIcon" TargetType="{x:Type Path}">
        <Style.Resources>
            <Storyboard x:Key="Anim.Tilt" RepeatBehavior="Forever" Duration="0:0:10">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.RotationY)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseIn"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="180"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="360"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="540">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:2" Value="720">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Setter Property="Fill" Value="{StaticResource Brush.StatsIcon}"/>
        <Setter Property="Margin" Value="0,4,4,0"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="noesis:Element.Transform3D">
            <Setter.Value>
                <noesis:CompositeTransform3D CenterX="5"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard Storyboard="{StaticResource Anim.Tilt}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Style.StatsLabelText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Brush.StatsLabelText}"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
    </Style>
    <Style x:Key="Style.StatsValueText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#7FFFFFFF"/>
    </Style>
    <ControlTemplate x:Key="Template.StatsValue" TargetType="{x:Type Label}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="15*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Border x:Name="Bd" Background="{StaticResource Brush.StatsValueBackground}">
                <noesis:Element.Transform3D>
                    <noesis:CompositeTransform3D TranslateZ="5"/>
                </noesis:Element.Transform3D>
                <Viewbox>
                    <local:AnimatedNumber x:Name="Num" Number="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" AnimationDuration="0:0:0.3" Margin="0,1">
                        <noesis:Element.Transform3D>
                            <noesis:CompositeTransform3D TranslateZ="10"/>
                        </noesis:Element.Transform3D>
                    </local:AnimatedNumber>
                </Viewbox>
            </Border>
        </Grid>
    </ControlTemplate>
    <Style x:Key="Style.StatsValue" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource Brush.StatsValueText}"/>
        <Setter Property="Template" Value="{StaticResource Template.StatsValue}"/>
    </Style>
    
    <!--Item ToolTip-->
    <ControlTemplate x:Key="Template.ItemToolTip" TargetType="{x:Type ContentControl}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Anim.Show">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" Storyboard.TargetName="ItemInfo">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" Storyboard.TargetName="ItemInfo">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="Name">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="Desc">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="LifeLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="LifeLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="Life">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.55" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Life">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.55" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="ManaLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.55" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ManaLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.55" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.85" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="Mana">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Mana">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="DpsLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="DpsLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="Dps">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.65" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.95" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Dps">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.65" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.95" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="ArmorLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.65" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.95" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ArmorLabel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.65" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.95" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(Brush.Opacity)" Storyboard.TargetName="Armor">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="Armor">
                    <EasingDoubleKeyFrame KeyTime="0" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="-10"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="FadeIn">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseIn"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseIn"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="FadeIn">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseIn"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <SineEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="FadeIn">
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#CC554222"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.325" Value="#E5554222"/>
                    <EasingColorKeyFrame KeyTime="0:0:0.35" Value="#CC554222"/>
                </ColorAnimationUsingKeyFrames>
                <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="FadeIn">
                    <DiscretePointKeyFrame KeyTime="0" Value="0,0"/>
                    <DiscretePointKeyFrame KeyTime="0:0:0.3" Value="1,1"/>
                </PointAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Root" Width="{Binding ActualWidth, ElementName=ToolTipRef}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="30*"/>
                <ColumnDefinition Width="970*"/>
                <ColumnDefinition Width="30*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Decorator x:Name="BorderRef" Grid.Column="0"/>
            <Decorator x:Name="MarginRef" Grid.Column="1"/>
            <Viewbox Grid.Column="2">
                <noesis:Element.Transform3D>
                    <noesis:CompositeTransform3D TranslateZ="10"/>
                </noesis:Element.Transform3D>
                <Grid>
                    <Border x:Name="ItemInfo" CornerRadius="2"
                        BorderThickness="{Binding ActualWidth, ElementName=BorderRef}"
                        Padding="{Binding ActualWidth, ElementName=MarginRef}" Background="#E532280F">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#66554222" Offset="0"/>
                                <GradientStop Color="#FF554222" Offset="0.6"/>
                                <GradientStop Color="#26554222" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <StackPanel>
                            <noesis:Element.Transform3D>
                                <noesis:CompositeTransform3D TranslateZ="5"/>
                            </noesis:Element.Transform3D>
                            <TextBlock x:Name="Name" Text="{Binding Name}" Foreground="#FFF3CF54" FontSize="11">
                                <noesis:Element.Transform3D>
                                    <noesis:CompositeTransform3D TranslateZ="5"/>
                                </noesis:Element.Transform3D>
                            </TextBlock>
                            <TextBlock x:Name="Desc" Text="{Binding Description}" FontSize="8" Width="100" TextWrapping="Wrap" Foreground="#CCF9E7B9"/>
                            <StackPanel Orientation="Horizontal" Margin="10,5,0,0">
                                <TextBlock x:Name="LifeLabel" Width="30" Text="Life:" Foreground="#F2C6C4B9" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock x:Name="Life" Width="50" Foreground="#FFBCEE52" TextAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                    <Run Text="+"/><Run Text="{Binding Life}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                <TextBlock x:Name="ManaLabel" Width="30" Text="Mana:" Foreground="#F2C6C4B9" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock x:Name="Mana" Width="50" Foreground="#FFBCEE52" TextAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                    <Run Text="+"/><Run Text="{Binding Mana}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                <TextBlock x:Name="DpsLabel" Width="30" Text="Dps:" Foreground="#F2C6C4B9" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock x:Name="Dps" Width="50" Foreground="#FFBCEE52" TextAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                    <Run Text="+"/><Run Text="{Binding Dps}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                <TextBlock x:Name="ArmorLabel" Width="30" Text="Armor:" Foreground="#F2C6C4B9" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock x:Name="Armor" Width="50" Foreground="#FFBCEE52" TextAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                    <TextBlock.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </TextBlock.RenderTransform>
                                    <Run Text="+"/><Run Text="{Binding Armor}"/>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    <Border x:Name="FadeIn" CornerRadius="2" Background="#CC554222" RenderTransformOrigin="0,0" d:IsHidden="True">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>
                    </Border>
                </Grid>
            </Viewbox>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="Root">
                <BeginStoryboard Storyboard="{StaticResource Anim.Show}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Style.ItemToolTip" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template" Value="{StaticResource Template.ItemToolTip}"/>
    </Style>
    
    <!--Equip Slot-->
    <ControlTemplate x:Key="Template.EquipSlot" TargetType="{x:Type ContentControl}">
        <ControlTemplate.Resources>
            <Geometry x:Key="Geometry.SlotBorder">M8.9999981,50.893192 L4.7217236,50.893192 C2.5125842,50.893188 0.72172329,49.102325 0.72172329,46.893188 L0.72172329,4.7217235 C0.72172329,2.512588 2.5125842,0.72172704 4.7217236,0.72172329 L8.9999981,0.72172329</Geometry>
            <Storyboard x:Key="Anim.OverOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Root">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="10">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="SlotBorder">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="20">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="40">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.2">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.2">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="ContentHost">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="30">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Anim.OverOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Root">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="SlotBorder">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="5">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="10">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="ContentHost">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="5">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Anim.InvalidDropOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" Storyboard.TargetName="InvalidDropBorder">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Anim.InvalidDropOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" Storyboard.TargetName="InvalidDropBorder">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Root" Margin="5">
            <noesis:Element.Transform3D>
                <noesis:CompositeTransform3D TranslateZ="0"/>
            </noesis:Element.Transform3D>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="12*"/>
                <RowDefinition Height="120*"/>
                <RowDefinition Height="24*"/>
            </Grid.RowDefinitions>
            <Decorator x:Name="SlotBorderRef"/>
            <Decorator x:Name="SlotCornerRef" Grid.Row="1"/>
            <Viewbox Grid.RowSpan="3">
                <Grid>
                    <Border Background="#3FDA9858" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                            CornerRadius="7" VerticalAlignment="Bottom">
                        <Grid x:Name="SlotBorder">
                            <noesis:Element.Transform3D>
                                <noesis:CompositeTransform3D TranslateZ="5"/>
                            </noesis:Element.Transform3D>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="4*"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="0" Stroke="{StaticResource Brush.SlotBorder}" StrokeThickness="{Binding ActualHeight, ElementName=SlotBorderRef}" Data="{StaticResource Geometry.SlotBorder}" Stretch="Fill"/>
                            <Path Grid.Column="2" Stroke="{StaticResource Brush.SlotBorder}" StrokeThickness="{Binding ActualHeight, ElementName=SlotBorderRef}" Data="{StaticResource Geometry.SlotBorder}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="-1"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <Border x:Name="InvalidDropBorder" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                            CornerRadius="7" VerticalAlignment="Bottom">
                        <Border.Background>
                            <SolidColorBrush Color="#66F04029" Opacity="0"/>
                        </Border.Background>
                    </Border>
                    <Viewbox x:Name="Icon" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Bottom"
                             Margin="{Binding ActualHeight, ElementName=ContentHost}">
                        <noesis:Element.Transform3D>
                            <noesis:CompositeTransform3D TranslateZ="10"/>
                        </noesis:Element.Transform3D>
                        <Viewbox.RenderTransform>
                            <ScaleTransform/>
                        </Viewbox.RenderTransform>
                        <Rectangle Width="60" Height="60">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="{StaticResource Image.IconAtlas}" Stretch="Fill" ViewboxUnits="Absolute" Viewbox="{Binding Item.Icon}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Viewbox>
                </Grid>
            </Viewbox>
            <Viewbox Grid.Row="3">
                <TextBlock x:Name="ContentHost" Text="{Binding Name}">
                    <noesis:Element.Transform3D>
                        <noesis:CompositeTransform3D TranslateZ="5"/>
                    </noesis:Element.Transform3D>
                </TextBlock>
            </Viewbox>
            <Popup x:Name="ToolTip" AllowsTransparency="True" Placement="{TemplateBinding Tag}" VerticalOffset="{Binding ActualHeight, ElementName=SlotCornerRef}">
                <ContentControl x:Name="ToolTipContent" Grid.ColumnSpan="2" DataContext="{Binding Item}" Style="{StaticResource Style.ItemToolTip}"/>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="DataContext" Value="{x:Null}" SourceName="ToolTipContent">
                <Setter Property="Visibility" Value="Collapsed" TargetName="ToolTipContent"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="IsOpen" Value="True" TargetName="ToolTip"/>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected}" Value="True"/>
                    <Condition Binding="{Binding TemplatedParent.IsKeyboardFocused, ElementName=Root}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOn}"/>
                </MultiDataTrigger.EnterActions>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding IsDropAllowed}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
                <DataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.InvalidDropOn}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.InvalidDropOff}"/>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsDropAllowed}" Value="True"/>
                    <Condition Binding="{Binding IsDragOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOn}"/>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOff}"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Style.EquipSlot" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.EquipSlotText}"/>
        <Setter Property="Template" Value="{StaticResource Template.EquipSlot}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="noesis:StyleInteraction.Behaviors">
            <Setter.Value>
                <noesis:StyleBehaviorCollection>
                    <local:DragItemBehavior
                        StartDragCommand="{Binding DataContext.StartDragItem, ElementName=Root}"
                        EndDragCommand="{Binding DataContext.EndDragItem, ElementName=Root}"/>
                    <local:DropItemBehavior
                        IsDragOver="{Binding IsDragOver, Mode=OneWayToSource}"
                        DropCommand="{Binding DataContext.DropItem, ElementName=Root}"/>
                </noesis:StyleBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="noesis:StyleInteraction.Triggers">
            <Setter.Value>
                <noesis:StyleTriggerCollection>
                    <i:EventTrigger EventName="MouseEnter">
                        <noesis:SetFocusAction/>
                    </i:EventTrigger>
                    <ei:PropertyChangedTrigger Binding="{Binding MoveFocus}">
                        <noesis:SetFocusAction/>
                    </ei:PropertyChangedTrigger>
                    <ei:KeyTrigger Key="Enter" ActiveOnFocus="True">
                        <i:InvokeCommandAction Command="{Binding DataContext.SelectSlot, ElementName=Root}" CommandParameter="{Binding}"/>
                    </ei:KeyTrigger>
                    <ei:KeyTrigger Key="Space" ActiveOnFocus="True">
                        <i:InvokeCommandAction Command="{Binding DataContext.SelectSlot, ElementName=Root}" CommandParameter="{Binding}"/>
                    </ei:KeyTrigger>
                    <ei:KeyTrigger Key="Escape" ActiveOnFocus="True">
                        <i:InvokeCommandAction Command="{Binding DataContext.SelectSlot, ElementName=Root}" CommandParameter="{x:Null}"/>
                    </ei:KeyTrigger>
                </noesis:StyleTriggerCollection>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Inventory Slot-->
    <ControlTemplate x:Key="Template.InventorySlot" TargetType="{x:Type ContentControl}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="Anim.OverOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Root">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="10">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="20">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.2">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Bg">
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#0CDA9858">
                        <EasingColorKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingColorKeyFrame.EasingFunction>
                    </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Bg">
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#59D19233">
                        <EasingColorKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingColorKeyFrame.EasingFunction>
                    </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" Storyboard.TargetName="Bd">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Anim.OverOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Root">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(noesis:Element.Transform3D).(noesis:CompositeTransform3D.TranslateZ)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="5">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="Icon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Bg">
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#3FDA9858">
                        <EasingColorKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingColorKeyFrame.EasingFunction>
                    </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Bg">
                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#3FDA9858">
                        <EasingColorKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingColorKeyFrame.EasingFunction>
                    </EasingColorKeyFrame>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(Brush.Opacity)" Storyboard.TargetName="Bd">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseInOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Anim.InvalidDropOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" Storyboard.TargetName="InvalidDropBorder">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="Anim.InvalidDropOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" Storyboard.TargetName="InvalidDropBorder">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid x:Name="Root" Margin="5" RenderTransformOrigin="0.5,0.5">
            <noesis:Element.Transform3D>
                <noesis:CompositeTransform3D TranslateZ="0"/>
            </noesis:Element.Transform3D>
            <Grid.RenderTransform>
                <ScaleTransform/>
            </Grid.RenderTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="50*"/>
            </Grid.ColumnDefinitions>
            <Decorator x:Name="SlotBorderRef"/>
            <Border x:Name="Bg" Height="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource Self}}" CornerRadius="4" Grid.ColumnSpan="2">
                <Border.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#3FDA9858" Offset="0"/>
                        <GradientStop Color="#3FDA9858" Offset="1"/>
                    </RadialGradientBrush>
                </Border.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="6*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Bd" Grid.RowSpan="3" Grid.ColumnSpan="3" BorderThickness="{Binding ActualWidth, ElementName=SlotBorderRef, Mode=OneWay}" CornerRadius="4">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFEBA147" Opacity="0"/>
                        </Border.BorderBrush>
                        <Popup x:Name="ToolTip" AllowsTransparency="True" Placement="Left">
                            <ContentControl x:Name="ToolTipContent" DataContext="{Binding Item}" Style="{StaticResource Style.ItemToolTip}"/>
                        </Popup>
                    </Border>
                    <Border x:Name="InvalidDropBorder" Grid.RowSpan="3" Grid.ColumnSpan="3" CornerRadius="4">
                        <Border.Background>
                            <SolidColorBrush Color="#66F04029" Opacity="0"/>
                        </Border.Background>
                    </Border>
                    <Viewbox x:Name="Icon" Grid.Row="1" Grid.Column="1" RenderTransformOrigin="0.5,0.5">
                        <noesis:Element.Transform3D>
                            <noesis:CompositeTransform3D TranslateZ="5"/>
                        </noesis:Element.Transform3D>
                        <Viewbox.RenderTransform>
                            <ScaleTransform/>
                        </Viewbox.RenderTransform>
                        <Rectangle Width="60" Height="60">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="{StaticResource Image.IconAtlas}" Stretch="Fill" ViewboxUnits="Absolute" Viewbox="{Binding Item.Icon}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Viewbox>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="DataContext" Value="{x:Null}" SourceName="ToolTipContent">
                <Setter Property="Visibility" Value="Collapsed" TargetName="ToolTipContent"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="IsOpen" Value="True" TargetName="ToolTip"/>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOn}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOff}"/>
                </Trigger.ExitActions>
            </Trigger>
            <DataTrigger Binding="{Binding IsDropAllowed}" Value="False">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsDropAllowed}" Value="True"/>
                    <Condition Binding="{Binding IsDragOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOn}"/>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource Anim.OverOff}"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Style.InventorySlot" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource Template.InventorySlot}"/>
    </Style>
    
    <!--Dragged Item-->
    <ControlTemplate x:Key="Template.DraggedItem" TargetType="{x:Type ContentControl}">
        <Grid>
            <Viewbox>
                <Border x:Name="Bd" CornerRadius="4" BorderBrush="#80EBA147" BorderThickness="3" RenderTransformOrigin="0.5,0.5">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform X="-48" Y="-48"/>
                        </TransformGroup>
                    </Border.RenderTransform>
                    <Border.Background>
                        <RadialGradientBrush>
                            <GradientStop Color="#00DA9858" Offset="0"/>
                            <GradientStop Color="#1FDA9858" Offset="1"/>
                        </RadialGradientBrush>
                    </Border.Background>
                    <Rectangle Width="60" Height="60" Margin="15">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{StaticResource Image.IconAtlas}" Stretch="Fill" ViewboxUnits="Absolute"
                                    Viewbox="{Binding Content.Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </Border>
            </Viewbox>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Style.DraggedItem" TargetType="{x:Type ContentControl}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Template" Value="{StaticResource Template.DraggedItem}"/>
    </Style>
    
    <!--ScrollBar-->
    <Style x:Key="Style.ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style.ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Anim.OverOn">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="Border">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="Border">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFE6D569">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="Anim.OverOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX" Storyboard.TargetName="Border">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY" Storyboard.TargetName="Border">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.98">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
                                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFEAC067">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <Border x:Name="Border" CornerRadius="5" Background="#FFEAC067" RenderTransformOrigin="0.5,0.5" Margin="0,5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="0.5" ScaleY="0.98"/>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Anim.OverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Anim.OverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Template.ScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Track x:Name="PART_Track" Grid.Row="1" Margin="0,1" Orientation="Vertical" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource Style.ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource Style.ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource Style.ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{StaticResource Template.ScrollBar}"/>
    </Style>
    
    <!--ScrollViewer-->
    <ControlTemplate x:Key="Template.ScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <ScrollBar x:Name="PART_VerticalScrollBar"
                        Grid.Column="1"
                        Orientation="Vertical"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Minimum="0"
                        Maximum="{TemplateBinding ScrollableHeight}"/>
            <ScrollContentPresenter Grid.Column="0"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    Margin="{TemplateBinding Padding}">
                <noesis:Element.Transform3D>
                    <noesis:CompositeTransform3D TranslateZ="10"/>
                </noesis:Element.Transform3D>
            </ScrollContentPresenter>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>
