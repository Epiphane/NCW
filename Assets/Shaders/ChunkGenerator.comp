#version 460 //? #version 460

#include "utils/uniforms.glsl"
#include "utils/noise.glsl"
#include "utils/terrain_default.glsl"
#include "utils/chunk.glsl"

layout(local_size_x = 8, local_size_y = 16, local_size_z = 8) in;
layout(std140, binding = 0) buffer destBuffer
{
    vec4 Colors[];
} outBuffer;

vec4 kDeep = vec4(0, 0, 128, 2) / 255.0;
vec4 kShallow = vec4(0, 0, 255, 10) / 255.0;
vec4 kShore = vec4(0, 128, 255, 20) / 255.0;
vec4 kSand = vec4(240, 240, 64, 35) / 255.0;
vec4 kGrass = vec4(32, 160, 0, 50) / 255.0;
vec4 kGrass2 = vec4(32, 160, 0, 120) / 255.0;
vec4 kDirt = vec4(51, 33, 20, 145) / 255.0;
vec4 kRock = vec4(128, 128, 128, 160) / 255.0;
vec4 kSnow = vec4(255, 255, 255, 190) / 255.0;

void main()
{
    ivec3 coords = ivec3(gl_GlobalInvocationID.xyz);
    uint offset = getIndex(coords);

    float elevation = getElevation(coords);
    if (elevation >= 0)
    {
        vec3 color = kDeep.xyz;
        color = mix(color, kShallow.xyz, smoothstep(kDeep.w,    kShallow.w, elevation));
        color = mix(color, kShore.xyz,   smoothstep(kShallow.w, kShore.w,   elevation));
        color = mix(color, kSand.xyz,    smoothstep(kShore.w,   kSand.w,    elevation));
        color = mix(color, kGrass.xyz,   smoothstep(kSand.w,    kGrass.w,   elevation));
        color = mix(color, kGrass2.xyz,  smoothstep(kGrass.w,   kGrass2.w,  elevation));
        color = mix(color, kDirt.xyz,    smoothstep(kGrass2.w,  kDirt.w,    elevation));
        color = mix(color, kRock.xyz,    smoothstep(kDirt.w,    kRock.w,    elevation));
        color = mix(color, kSnow.xyz,    smoothstep(kRock.w,    kSnow.w,    elevation));

        outBuffer.Colors[offset] = vec4(color, 1);
    }
    else
    {
        outBuffer.Colors[offset] = vec4(kDeep.xyz, 1);
        outBuffer.Colors[offset].a = 0;
    }
}
